{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","src/modules/Core.class.js","src/lib/constants.js","src/lib/templates.js","src/lib/helpers.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\"use strict\";\nvar $a5fd07fa01589658$exports = {};\nvar $8c87eaf8dcddc30b$exports = {};\nconst $842258910d9eacc1$export$59458913dd65669f = 2;\nconst $842258910d9eacc1$export$e6adb947a604b31d = 4;\nconst $842258910d9eacc1$export$8434384909b7a3bf = 0;\nconst $842258910d9eacc1$export$db994895d061874c = 3;\nconst $842258910d9eacc1$export$e50c1bdbff08aa5c = 4;\nconst $842258910d9eacc1$export$23df11dd281ad08a = 10;\nconst $842258910d9eacc1$export$57e3f64a84c88ba6 = 2048;\nconst $842258910d9eacc1$export$e8c05b13b4dd4b40 = {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n};\nconst $842258910d9eacc1$export$cc4d8bc46c7cdb33 = {\n    start: \"msgStart\",\n    lose: \"msgLose\",\n    win: \"msgWin\"\n};\nconst $842258910d9eacc1$export$fcce29f5410baf23 = {\n    w: \"w\",\n    a: \"a\",\n    s: \"s\",\n    d: \"d\",\n    ArrowUp: \"ArrowUp\",\n    ArrowLeft: \"ArrowLeft\",\n    ArrowDown: \"ArrowDown\",\n    ArrowRight: \"ArrowRight\"\n};\n\n\nconst $2d03ec4a5027889a$export$ee3cdcf4b56ea1de = `<h1>2048</h1>\n  <div class=\"controls\">\n    <p class=\"info\">\n      Score:\n      <span class=\"game-score\" id=\"game-score\">0</span>\n    </p>\n    <button\n      class=\"button start\"\n        id=\"start\"\n      >\n      Start\n    </button>\n    <button\n      class=\"button restart hidden\"\n        id=\"restart\"\n      >\n      Restart\n    </button>\n  </div>`;\nconst $2d03ec4a5027889a$export$506e34780925d5ee = `<tbody>\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n  </tbody>`;\nconst $2d03ec4a5027889a$export$bcf33fd464112e94 = `<p class=\"message message-lose hidden\" id=\"message-lose\">You lose! Restart the game?</p>\n  <p class=\"message message-win hidden\" id=\"message-win\">Winner! Congrats! You did it!</p>\n  <p class=\"message message-start hidden\" id=\"message-start\">\n    Press \"Start\" to begin game. Good luck!\n  </p>`;\n\n\n\nconst $38ee0b4aef4b3521$export$903b9f27f66c899a = ()=>{\n    const numbers = Array.from({\n        length: (0, $842258910d9eacc1$export$23df11dd281ad08a)\n    }, (_, idx)=>{\n        if (idx === (0, $842258910d9eacc1$export$23df11dd281ad08a) - 1) return 0, $842258910d9eacc1$export$e6adb947a604b31d;\n        return 0, $842258910d9eacc1$export$59458913dd65669f;\n    });\n    return numbers[Math.floor(Math.random() * (0, $842258910d9eacc1$export$23df11dd281ad08a))];\n};\nconst $38ee0b4aef4b3521$export$8ad8ee91ff91d9b5 = ()=>Math.floor(Math.random() * ((0, $842258910d9eacc1$export$db994895d061874c) - (0, $842258910d9eacc1$export$8434384909b7a3bf) + 1) + (0, $842258910d9eacc1$export$8434384909b7a3bf));\nconst $38ee0b4aef4b3521$export$d15e1374dfc043f9 = ({ field: field, exclude: exclude = [] })=>{\n    const [excludeX, excludeY] = exclude;\n    const positionX = $38ee0b4aef4b3521$export$8ad8ee91ff91d9b5();\n    const positionY = $38ee0b4aef4b3521$export$8ad8ee91ff91d9b5();\n    const isExcluded = positionX === excludeX && positionY === excludeY;\n    const isOccupied = !!field[positionY][positionX];\n    if (isExcluded || isOccupied) return $38ee0b4aef4b3521$export$d15e1374dfc043f9({\n        field: field,\n        exclude: exclude\n    });\n    return [\n        positionX,\n        positionY\n    ];\n};\nconst $38ee0b4aef4b3521$export$124b0cee26577176 = (row)=>{\n    const rowCopy = [\n        ...row\n    ];\n    let counter = 0;\n    let is2048 = false;\n    for(let idx = 0; idx < rowCopy.length; idx++)if (rowCopy[idx] === rowCopy[idx + 1]) {\n        const mergedSum = rowCopy[idx] * 2;\n        is2048 = mergedSum === (0, $842258910d9eacc1$export$57e3f64a84c88ba6);\n        counter += mergedSum;\n        rowCopy[idx] = mergedSum;\n        rowCopy[idx + 1] = 0;\n    }\n    return {\n        row: rowCopy,\n        counter: counter,\n        is2048: is2048\n    };\n};\nconst $38ee0b4aef4b3521$export$ae78454ba1e10817 = (row)=>{\n    return row.filter((num)=>!!num);\n};\nconst $38ee0b4aef4b3521$export$bf5b0b93d48be5a2 = (row)=>{\n    const diff = 4 - row.length;\n    const zerosArray = Array.from({\n        length: diff\n    }, ()=>0);\n    return row.concat(zerosArray);\n};\nconst $38ee0b4aef4b3521$export$f79bc0ce6bdc0970 = (inputBoard)=>{\n    const outputBoard = Array.from({\n        length: (0, $842258910d9eacc1$export$e50c1bdbff08aa5c)\n    }, ()=>[]);\n    for(let i = 0; i < (0, $842258910d9eacc1$export$e50c1bdbff08aa5c); i++)inputBoard.forEach((_el, idx)=>{\n        outputBoard[(0, $842258910d9eacc1$export$e50c1bdbff08aa5c) - 1 - idx][i] = inputBoard[i][idx];\n    });\n    return outputBoard;\n};\nconst $38ee0b4aef4b3521$export$fe71d822d0fb0007 = (inputBoard)=>{\n    const outputBoard = Array.from({\n        length: (0, $842258910d9eacc1$export$e50c1bdbff08aa5c)\n    }, ()=>[]);\n    for(let i = 0; i < (0, $842258910d9eacc1$export$e50c1bdbff08aa5c); i++)inputBoard.forEach((_el, idx)=>{\n        outputBoard[idx][(0, $842258910d9eacc1$export$e50c1bdbff08aa5c) - 1 - i] = inputBoard[i][idx];\n    });\n    return outputBoard;\n};\nconst $38ee0b4aef4b3521$export$4bf8c9e1438f4043 = ({ field: field, rtl: rtl = false } = {})=>{\n    let sum = 0;\n    let isWinner = false;\n    let wasChanged = false;\n    for(let i = 0; i < field.length; i++){\n        const row = rtl ? field[i].reverse() : field[i];\n        const firstStageFilteredRow = $38ee0b4aef4b3521$export$ae78454ba1e10817(row);\n        const { row: mergedCellsRow, counter: counter, is2048: is2048 } = $38ee0b4aef4b3521$export$124b0cee26577176(firstStageFilteredRow);\n        sum += counter;\n        isWinner = is2048;\n        const secondStageFilteredRow = $38ee0b4aef4b3521$export$ae78454ba1e10817(mergedCellsRow);\n        const modifiedRow = $38ee0b4aef4b3521$export$bf5b0b93d48be5a2(secondStageFilteredRow);\n        wasChanged = !wasChanged ? row.some((el, idx)=>el !== modifiedRow[idx]) : wasChanged;\n        field[i] = rtl ? modifiedRow.reverse() : modifiedRow;\n    }\n    return {\n        field: field,\n        score: sum,\n        isWinner: isWinner,\n        wasChanged: wasChanged\n    };\n};\nconst $38ee0b4aef4b3521$export$d1223525e24f3eda = ({ field: field, rtl: rtl = false })=>{\n    let rotatedBoard = $38ee0b4aef4b3521$export$f79bc0ce6bdc0970(field);\n    const { score: score, isWinner: isWinner, wasChanged: wasChanged } = $38ee0b4aef4b3521$export$4bf8c9e1438f4043({\n        field: rotatedBoard,\n        rtl: rtl\n    });\n    rotatedBoard = $38ee0b4aef4b3521$export$fe71d822d0fb0007(rotatedBoard);\n    return {\n        field: rotatedBoard,\n        score: score,\n        isWinner: isWinner,\n        wasChanged: wasChanged\n    };\n};\n\n\n\"use strict\";\nclass $8c87eaf8dcddc30b$var$Core {\n    field = null;\n    score = 0;\n    fieldControls = {};\n    status = null;\n    messages = {};\n    #triggerMessage({ key: key, show: show }) {\n        if (show) this.messages[key].classList.remove(\"hidden\");\n        else this.messages[key].classList.add(\"hidden\");\n    }\n    #updateField(newField) {\n        this.field = newField;\n    }\n    #updateScore(score) {\n        this.score += score;\n    }\n    #createNewField() {\n        const newField = Array.from({\n            length: (0, $842258910d9eacc1$export$e50c1bdbff08aa5c)\n        }, ()=>[\n                0,\n                0,\n                0,\n                0\n            ]);\n        this.#updateField(newField);\n    }\n    #seed() {\n        const field = this._getField();\n        const [firstCellPosX, firstCellPosY] = (0, $38ee0b4aef4b3521$export$d15e1374dfc043f9)({\n            field: field\n        });\n        const [secondCellPosX, secondCellPosY] = (0, $38ee0b4aef4b3521$export$d15e1374dfc043f9)({\n            field: field,\n            exclude: [\n                firstCellPosX,\n                firstCellPosY\n            ]\n        });\n        field[firstCellPosY][firstCellPosX] = (0, $38ee0b4aef4b3521$export$903b9f27f66c899a)();\n        field[secondCellPosY][secondCellPosX] = (0, $38ee0b4aef4b3521$export$903b9f27f66c899a)();\n        this.#updateField(field);\n    }\n    #initialRender(rootRef) {\n        rootRef.classList.add(\"container\");\n        const headerNode = document.createElement(\"div\");\n        const fieldNode = document.createElement(\"table\");\n        const notificationNode = document.createElement(\"div\");\n        headerNode.classList.add(\"game-header\");\n        fieldNode.classList.add(\"game-field\");\n        notificationNode.classList.add(\"message-container\");\n        headerNode.innerHTML = (0, $2d03ec4a5027889a$export$ee3cdcf4b56ea1de);\n        fieldNode.innerHTML = (0, $2d03ec4a5027889a$export$506e34780925d5ee);\n        notificationNode.innerHTML = (0, $2d03ec4a5027889a$export$bcf33fd464112e94);\n        rootRef.append(headerNode, fieldNode, notificationNode);\n    }\n    #initializeControls() {\n        this.controls = {\n            startBtn: document.getElementById(\"start\"),\n            restartBtn: document.getElementById(\"restart\")\n        };\n    }\n    #initializeMessages() {\n        this.messages = {\n            msgWin: document.getElementById(\"message-win\"),\n            msgLose: document.getElementById(\"message-lose\"),\n            msgStart: document.getElementById(\"message-start\")\n        };\n    }\n    #checkIfHasEmptyCells() {\n        const field = this._getField();\n        return field.some((row)=>row.some((cell)=>!cell));\n    }\n    #checkIfHasAvailablePares() {\n        const field = this._getField();\n        for(let i = 0; i < field.length; i++){\n            const row = field[i];\n            for(let y = 0; y < row.length; y++){\n                if (row[y] === row[y + 1]) return true;\n            }\n        }\n        const rotatedBoard = (0, $38ee0b4aef4b3521$export$f79bc0ce6bdc0970)(field);\n        for(let i = 0; i < rotatedBoard.length; i++){\n            const row = rotatedBoard[i];\n            for(let y = 0; y < row.length; y++){\n                if (row[y] === row[y + 1]) return true;\n            }\n        }\n        return false;\n    }\n    #winTheGame() {\n        this._setStatus((0, $842258910d9eacc1$export$e8c05b13b4dd4b40).win);\n        this._showWinMessage();\n    }\n    _setStatus(value) {\n        this.status = value;\n    }\n    _getStatus() {\n        return this.status;\n    }\n    _getScore() {\n        return this.score;\n    }\n    _getField() {\n        return [\n            ...this.field\n        ];\n    }\n    /**\n   * Game statuses.\n   */ _setStatusIdle() {\n        this._setStatus((0, $842258910d9eacc1$export$e8c05b13b4dd4b40).idle);\n    }\n    _setStatusWin() {\n        this._setStatus((0, $842258910d9eacc1$export$e8c05b13b4dd4b40).win);\n    }\n    _setStatusLose() {\n        this._setStatus((0, $842258910d9eacc1$export$e8c05b13b4dd4b40).lose);\n    }\n    _setStatusPlaying() {\n        this._setStatus((0, $842258910d9eacc1$export$e8c05b13b4dd4b40).playing);\n    }\n    /**\n   * Game messages.\n   */ _showStartMessage() {\n        this.#triggerMessage({\n            key: (0, $842258910d9eacc1$export$cc4d8bc46c7cdb33).start,\n            show: true\n        });\n    }\n    _showWinMessage() {\n        this.#triggerMessage({\n            key: (0, $842258910d9eacc1$export$cc4d8bc46c7cdb33).win,\n            show: true\n        });\n    }\n    _showLoseMessage() {\n        this.#triggerMessage({\n            key: (0, $842258910d9eacc1$export$cc4d8bc46c7cdb33).lose,\n            show: true\n        });\n    }\n    _hideMessages() {\n        for(const key in 0, $842258910d9eacc1$export$cc4d8bc46c7cdb33)this.#triggerMessage({\n            key: (0, $842258910d9eacc1$export$cc4d8bc46c7cdb33)[key],\n            show: false\n        });\n    }\n    _setupNewGame() {\n        this.#createNewField();\n        this.#seed();\n        this._setStatusPlaying();\n    }\n    _initialize(rootRef) {\n        this.#initialRender(rootRef);\n        this.#initializeControls();\n        this.#initializeMessages();\n    }\n    _rerender() {\n        const fieldCells = document.querySelectorAll(\".field-cell\");\n        const scoreField = document.getElementById(\"game-score\");\n        const field = this._getField();\n        const score = this._getScore();\n        field.forEach((row, rowIdx)=>{\n            row.forEach((cell, cellIdx)=>{\n                const currentCellIdx = cellIdx + 4 * rowIdx;\n                const cellElement = fieldCells[currentCellIdx];\n                if (cell) {\n                    cellElement.className = \"field-cell\";\n                    cellElement.classList.add(`field-cell--${cell}`);\n                    cellElement.textContent = cell;\n                } else {\n                    cellElement.textContent = \"\";\n                    cellElement.className = \"field-cell\";\n                }\n            });\n        });\n        scoreField.textContent = score;\n        const hasEmptyCells = this.#checkIfHasEmptyCells();\n        const hasAvailablePairs = this.#checkIfHasAvailablePares();\n        if (!hasEmptyCells && !hasAvailablePairs) {\n            this._setStatusLose();\n            this._showLoseMessage();\n        }\n    }\n    _createNewCell() {\n        const hasEmptyCells = this.#checkIfHasEmptyCells();\n        if (hasEmptyCells) {\n            const field = this._getField();\n            const [cellPosX, cellPosY] = (0, $38ee0b4aef4b3521$export$d15e1374dfc043f9)({\n                field: field\n            });\n            field[cellPosY][cellPosX] = (0, $38ee0b4aef4b3521$export$903b9f27f66c899a)();\n            this.#updateField(field);\n        }\n    }\n    // Shifting.\n    _shiftLeft() {\n        const field = this._getField();\n        const { field: newField, score: score, isWinner: isWinner, wasChanged: wasChanged } = (0, $38ee0b4aef4b3521$export$4bf8c9e1438f4043)({\n            field: field\n        });\n        this.#updateScore(score);\n        this.#updateField(newField);\n        if (isWinner) this.#winTheGame();\n        return {\n            wasChanged: wasChanged\n        };\n    }\n    _shiftRight() {\n        const field = this._getField();\n        const { field: newField, score: score, isWinner: isWinner, wasChanged: wasChanged } = (0, $38ee0b4aef4b3521$export$4bf8c9e1438f4043)({\n            field: field,\n            rtl: true\n        });\n        this.#updateScore(score);\n        this.#updateField(newField);\n        if (isWinner) this.#winTheGame();\n        return {\n            wasChanged: wasChanged\n        };\n    }\n    _shiftTop() {\n        const field = this._getField();\n        const { field: newField, score: score, isWinner: isWinner, wasChanged: wasChanged } = (0, $38ee0b4aef4b3521$export$d1223525e24f3eda)({\n            field: field\n        });\n        this.#updateScore(score);\n        this.#updateField(newField);\n        if (isWinner) this.#winTheGame();\n        return {\n            wasChanged: wasChanged\n        };\n    }\n    _shiftBottom() {\n        const field = this._getField();\n        const { field: newField, score: score, isWinner: isWinner, wasChanged: wasChanged } = (0, $38ee0b4aef4b3521$export$d1223525e24f3eda)({\n            field: field,\n            rtl: true\n        });\n        this.#updateScore(score);\n        this.#updateField(newField);\n        if (isWinner) this.#winTheGame();\n        return {\n            wasChanged: wasChanged\n        };\n    }\n}\n$8c87eaf8dcddc30b$exports = $8c87eaf8dcddc30b$var$Core;\n\n\n\n\"use strict\";\nclass $a5fd07fa01589658$var$Game extends (0, (/*@__PURE__*/$parcel$interopDefault($8c87eaf8dcddc30b$exports))) {\n    #hydrate() {\n        this.controls.startBtn.addEventListener(\"click\", this.start.bind(this));\n        this.controls.restartBtn.addEventListener(\"click\", this.restart.bind(this));\n        document.addEventListener(\"keyup\", ({ key: key })=>{\n            switch(key){\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).w:\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).ArrowUp:\n                    this.moveUp();\n                    break;\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).a:\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).ArrowLeft:\n                    this.moveLeft();\n                    break;\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).s:\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).ArrowDown:\n                    this.moveDown();\n                    break;\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).d:\n                case (0, $842258910d9eacc1$export$fcce29f5410baf23).ArrowRight:\n                    this.moveRight();\n                    break;\n            }\n        });\n    }\n    /**\n   * Initialize the game.\n   */ initialize(rootRef) {\n        super._initialize(rootRef);\n        this.#hydrate();\n        this._setStatusIdle();\n        this._showStartMessage();\n    }\n    getScore() {\n        return this._getScore();\n    }\n    getState() {\n        return this._getState();\n    }\n    getStatus() {\n        return this._getStatus();\n    }\n    /**\n   * Start the game.\n   */ start() {\n        this._setupNewGame();\n        this.controls.startBtn.removeEventListener(\"click\", this.start.bind(this));\n        this.controls.startBtn.classList.add(\"hidden\");\n        this.controls.restartBtn.classList.remove(\"hidden\");\n        this._hideMessages();\n        this._rerender();\n    }\n    /**\n   * Reset the game.\n   */ restart() {\n        this._hideMessages();\n        this._setupNewGame();\n        this._rerender();\n    }\n    /**\n   * Controls.\n   */ moveLeft() {\n        const gameStatus = this._getStatus();\n        if (gameStatus !== (0, $842258910d9eacc1$export$e8c05b13b4dd4b40).playing) return;\n        const { wasChanged: wasChanged } = this._shiftLeft();\n        if (wasChanged) this._createNewCell();\n        this._rerender();\n    }\n    moveRight() {\n        const gameStatus = this._getStatus();\n        if (gameStatus !== (0, $842258910d9eacc1$export$e8c05b13b4dd4b40).playing) return;\n        const { wasChanged: wasChanged } = this._shiftRight();\n        if (wasChanged) this._createNewCell();\n        this._rerender();\n    }\n    moveUp() {\n        const gameStatus = this._getStatus();\n        if (gameStatus !== (0, $842258910d9eacc1$export$e8c05b13b4dd4b40).playing) return;\n        const { wasChanged: wasChanged } = this._shiftTop();\n        if (wasChanged) this._createNewCell();\n        this._rerender();\n    }\n    moveDown() {\n        const gameStatus = this._getStatus();\n        if (gameStatus !== (0, $842258910d9eacc1$export$e8c05b13b4dd4b40).playing) return;\n        const { wasChanged: wasChanged } = this._shiftBottom();\n        if (wasChanged) this._createNewCell();\n        this._rerender();\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$gameRef = document.getElementById(\"game-2048\");\nif ($09e991522ca7e64e$var$gameRef) $09e991522ca7e64e$var$game.initialize($09e991522ca7e64e$var$gameRef);\n\n\n//# sourceMappingURL=index.2ac371b9.js.map\n","\"use strict\";\n\nconst Game = require(\"../modules/Game.class\");\n\nconst game = new Game();\n\nconst gameRef = document.getElementById(\"game-2048\");\n\nif (gameRef) {\n  game.initialize(gameRef);\n}\n","\"use strict\";\nimport Core from \"./Core.class\";\n\nimport { GAME_STATUSES, KEY_BINDS } from \"../lib/constants\";\n\nclass Game extends Core {\n  #hydrate() {\n    this.controls.startBtn.addEventListener(\"click\", this.start.bind(this));\n    this.controls.restartBtn.addEventListener(\"click\", this.restart.bind(this));\n\n    document.addEventListener(\"keyup\", ({ key }) => {\n      switch (key) {\n        case KEY_BINDS.w:\n        case KEY_BINDS.ArrowUp:\n          this.moveUp();\n          break;\n\n        case KEY_BINDS.a:\n        case KEY_BINDS.ArrowLeft:\n          this.moveLeft();\n          break;\n\n        case KEY_BINDS.s:\n        case KEY_BINDS.ArrowDown:\n          this.moveDown();\n          break;\n\n        case KEY_BINDS.d:\n        case KEY_BINDS.ArrowRight:\n          this.moveRight();\n          break;\n      }\n    });\n  }\n\n  /**\n   * Initialize the game.\n   */\n  initialize(rootRef) {\n    super._initialize(rootRef);\n\n    this.#hydrate();\n    this._setStatusIdle();\n    this._showStartMessage();\n  }\n\n  getScore() {\n    return this._getScore();\n  }\n\n  getState() {\n    return this._getState();\n  }\n\n  getStatus() {\n    return this._getStatus();\n  }\n\n  /**\n   * Start the game.\n   */\n  start() {\n    this._setupNewGame();\n\n    this.controls.startBtn.removeEventListener(\"click\", this.start.bind(this));\n    this.controls.startBtn.classList.add(\"hidden\");\n    this.controls.restartBtn.classList.remove(\"hidden\");\n\n    this._hideMessages();\n    this._rerender();\n  }\n\n  /**\n   * Reset the game.\n   */\n  restart() {\n    this._hideMessages();\n\n    this._setupNewGame();\n\n    this._rerender();\n  }\n\n  /**\n   * Controls.\n   */\n  moveLeft() {\n    const gameStatus = this._getStatus();\n\n    if (gameStatus !== GAME_STATUSES.playing) {\n      return;\n    }\n\n    const { wasChanged } = this._shiftLeft();\n\n    if (wasChanged) {\n      this._createNewCell();\n    }\n\n    this._rerender();\n  }\n\n  moveRight() {\n    const gameStatus = this._getStatus();\n\n    if (gameStatus !== GAME_STATUSES.playing) {\n      return;\n    }\n\n    const { wasChanged } = this._shiftRight();\n\n    if (wasChanged) {\n      this._createNewCell();\n    }\n\n    this._rerender();\n  }\n\n  moveUp() {\n    const gameStatus = this._getStatus();\n\n    if (gameStatus !== GAME_STATUSES.playing) {\n      return;\n    }\n\n    const { wasChanged } = this._shiftTop();\n\n    if (wasChanged) {\n      this._createNewCell();\n    }\n\n    this._rerender();\n  }\n\n  moveDown() {\n    const gameStatus = this._getStatus();\n\n    if (gameStatus !== GAME_STATUSES.playing) {\n      return;\n    }\n\n    const { wasChanged } = this._shiftBottom();\n\n    if (wasChanged) {\n      this._createNewCell();\n    }\n\n    this._rerender();\n  }\n}\n\nmodule.exports = Game;\n","\"use strict\";\nimport {\n  GAME_STATUSES,\n  MESSAGES_KEYS,\n  FIELD_ROW_LENGTH,\n} from \"../lib/constants\";\n\nimport {\n  FIELD_HTML_TEMPLATE,\n  HEADER_HTML_TEMPLATE,\n  MESSAGE_LOSE_HTML_TEMPLATE,\n} from \"../lib/templates\";\n\nimport {\n  generateCellValue,\n  generateRandomPosition,\n  horizontalShift,\n  rotateFieldForward,\n  verticalShift,\n} from \"../lib/helpers\";\n\nclass Core {\n  field = null;\n  score = 0;\n  fieldControls = {};\n\n  status = null;\n  messages = {};\n\n  #triggerMessage({ key, show }) {\n    if (show) {\n      this.messages[key].classList.remove(\"hidden\");\n    } else {\n      this.messages[key].classList.add(\"hidden\");\n    }\n  }\n\n  #updateField(newField) {\n    this.field = newField;\n  }\n\n  #updateScore(score) {\n    this.score += score;\n  }\n\n  #createNewField() {\n    const newField = Array.from({ length: FIELD_ROW_LENGTH }, () => [\n      0, 0, 0, 0,\n    ]);\n\n    this.#updateField(newField);\n  }\n\n  #seed() {\n    const field = this._getField();\n\n    const [firstCellPosX, firstCellPosY] = generateRandomPosition({ field });\n    const [secondCellPosX, secondCellPosY] = generateRandomPosition({\n      field,\n      exclude: [firstCellPosX, firstCellPosY],\n    });\n\n    field[firstCellPosY][firstCellPosX] = generateCellValue();\n    field[secondCellPosY][secondCellPosX] = generateCellValue();\n\n    this.#updateField(field);\n  }\n\n  #initialRender(rootRef) {\n    rootRef.classList.add(\"container\");\n\n    const headerNode = document.createElement(\"div\");\n    const fieldNode = document.createElement(\"table\");\n    const notificationNode = document.createElement(\"div\");\n\n    headerNode.classList.add(\"game-header\");\n    fieldNode.classList.add(\"game-field\");\n    notificationNode.classList.add(\"message-container\");\n\n    headerNode.innerHTML = HEADER_HTML_TEMPLATE;\n    fieldNode.innerHTML = FIELD_HTML_TEMPLATE;\n    notificationNode.innerHTML = MESSAGE_LOSE_HTML_TEMPLATE;\n\n    rootRef.append(headerNode, fieldNode, notificationNode);\n  }\n\n  #initializeControls() {\n    this.controls = {\n      startBtn: document.getElementById(\"start\"),\n      restartBtn: document.getElementById(\"restart\"),\n    };\n  }\n\n  #initializeMessages() {\n    this.messages = {\n      msgWin: document.getElementById(\"message-win\"),\n      msgLose: document.getElementById(\"message-lose\"),\n      msgStart: document.getElementById(\"message-start\"),\n    };\n  }\n\n  #checkIfHasEmptyCells() {\n    const field = this._getField();\n\n    return field.some((row) => row.some((cell) => !cell));\n  }\n\n  #checkIfHasAvailablePares() {\n    const field = this._getField();\n\n    for (let i = 0; i < field.length; i++) {\n      const row = field[i];\n\n      for (let y = 0; y < row.length; y++) {\n        if (row[y] === row[y + 1]) {\n          return true;\n        }\n      }\n    }\n\n    const rotatedBoard = rotateFieldForward(field);\n\n    for (let i = 0; i < rotatedBoard.length; i++) {\n      const row = rotatedBoard[i];\n\n      for (let y = 0; y < row.length; y++) {\n        if (row[y] === row[y + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  #winTheGame() {\n    this._setStatus(GAME_STATUSES.win);\n    this._showWinMessage();\n  }\n\n  _setStatus(value) {\n    this.status = value;\n  }\n\n  _getStatus() {\n    return this.status;\n  }\n\n  _getScore() {\n    return this.score;\n  }\n\n  _getField() {\n    return [...this.field];\n  }\n\n  /**\n   * Game statuses.\n   */\n  _setStatusIdle() {\n    this._setStatus(GAME_STATUSES.idle);\n  }\n\n  _setStatusWin() {\n    this._setStatus(GAME_STATUSES.win);\n  }\n\n  _setStatusLose() {\n    this._setStatus(GAME_STATUSES.lose);\n  }\n\n  _setStatusPlaying() {\n    this._setStatus(GAME_STATUSES.playing);\n  }\n\n  /**\n   * Game messages.\n   */\n  _showStartMessage() {\n    this.#triggerMessage({ key: MESSAGES_KEYS.start, show: true });\n  }\n\n  _showWinMessage() {\n    this.#triggerMessage({ key: MESSAGES_KEYS.win, show: true });\n  }\n\n  _showLoseMessage() {\n    this.#triggerMessage({ key: MESSAGES_KEYS.lose, show: true });\n  }\n\n  _hideMessages() {\n    for (const key in MESSAGES_KEYS) {\n      this.#triggerMessage({ key: MESSAGES_KEYS[key], show: false });\n    }\n  }\n\n  _setupNewGame() {\n    this.#createNewField();\n    this.#seed();\n    this._setStatusPlaying();\n  }\n\n  _initialize(rootRef) {\n    this.#initialRender(rootRef);\n    this.#initializeControls();\n    this.#initializeMessages();\n  }\n\n  _rerender() {\n    const fieldCells = document.querySelectorAll(\".field-cell\");\n    const scoreField = document.getElementById(\"game-score\");\n\n    const field = this._getField();\n    const score = this._getScore();\n\n    field.forEach((row, rowIdx) => {\n      row.forEach((cell, cellIdx) => {\n        const currentCellIdx = cellIdx + 4 * rowIdx;\n        const cellElement = fieldCells[currentCellIdx];\n\n        if (cell) {\n          cellElement.className = \"field-cell\";\n          cellElement.classList.add(`field-cell--${cell}`);\n          cellElement.textContent = cell;\n        } else {\n          cellElement.textContent = \"\";\n          cellElement.className = \"field-cell\";\n        }\n      });\n    });\n\n    scoreField.textContent = score;\n\n    const hasEmptyCells = this.#checkIfHasEmptyCells();\n    const hasAvailablePairs = this.#checkIfHasAvailablePares();\n\n    if (!hasEmptyCells && !hasAvailablePairs) {\n      this._setStatusLose();\n      this._showLoseMessage();\n    }\n  }\n\n  _createNewCell() {\n    const hasEmptyCells = this.#checkIfHasEmptyCells();\n\n    if (hasEmptyCells) {\n      const field = this._getField();\n      const [cellPosX, cellPosY] = generateRandomPosition({ field });\n\n      field[cellPosY][cellPosX] = generateCellValue();\n\n      this.#updateField(field);\n    }\n  }\n\n  // Shifting.\n  _shiftLeft() {\n    const field = this._getField();\n\n    const {\n      field: newField,\n      score,\n      isWinner,\n      wasChanged,\n    } = horizontalShift({ field });\n\n    this.#updateScore(score);\n    this.#updateField(newField);\n\n    if (isWinner) {\n      this.#winTheGame();\n    }\n\n    return { wasChanged };\n  }\n\n  _shiftRight() {\n    const field = this._getField();\n\n    const {\n      field: newField,\n      score,\n      isWinner,\n      wasChanged,\n    } = horizontalShift({ field, rtl: true });\n\n    this.#updateScore(score);\n    this.#updateField(newField);\n\n    if (isWinner) {\n      this.#winTheGame();\n    }\n\n    return { wasChanged };\n  }\n\n  _shiftTop() {\n    const field = this._getField();\n\n    const {\n      field: newField,\n      score,\n      isWinner,\n      wasChanged,\n    } = verticalShift({ field });\n\n    this.#updateScore(score);\n    this.#updateField(newField);\n\n    if (isWinner) {\n      this.#winTheGame();\n    }\n\n    return { wasChanged };\n  }\n\n  _shiftBottom() {\n    const field = this._getField();\n\n    const {\n      field: newField,\n      score,\n      isWinner,\n      wasChanged,\n    } = verticalShift({ field, rtl: true });\n\n    this.#updateScore(score);\n    this.#updateField(newField);\n\n    if (isWinner) {\n      this.#winTheGame();\n    }\n\n    return { wasChanged };\n  }\n}\n\nmodule.exports = Core;\n","export const DEFAULT_NUM_2 = 2;\nexport const DEFAULT_NUM_4 = 4;\n\nexport const FIELD_ROW_MIN_IDX = 0;\nexport const FIELD_ROW_MAX_IDX = 3;\nexport const FIELD_ROW_LENGTH = 4;\nexport const NUMBER_PROBABILITY_ARRAY_LENGTH = 10;\n\nexport const VALUE_2048 = 2048;\n\nexport const GAME_STATUSES = {\n  idle: \"idle\",\n  playing: \"playing\",\n  win: \"win\",\n  lose: \"lose\",\n};\n\nexport const MESSAGES_KEYS = {\n  start: \"msgStart\",\n  lose: \"msgLose\",\n  win: \"msgWin\",\n};\n\nexport const KEY_BINDS = {\n  w: \"w\",\n  a: \"a\",\n  s: \"s\",\n  d: \"d\",\n  ArrowUp: \"ArrowUp\",\n  ArrowLeft: \"ArrowLeft\",\n  ArrowDown: \"ArrowDown\",\n  ArrowRight: \"ArrowRight\",\n};\n","export const HEADER_HTML_TEMPLATE = `<h1>2048</h1>\n  <div class=\"controls\">\n    <p class=\"info\">\n      Score:\n      <span class=\"game-score\" id=\"game-score\">0</span>\n    </p>\n    <button\n      class=\"button start\"\n        id=\"start\"\n      >\n      Start\n    </button>\n    <button\n      class=\"button restart hidden\"\n        id=\"restart\"\n      >\n      Restart\n    </button>\n  </div>`;\n\nexport const FIELD_HTML_TEMPLATE = `<tbody>\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n\n    <tr class=\"field-row\">\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n      <td class=\"field-cell\"></td>\n    </tr>\n  </tbody>`;\n\nexport const MESSAGE_LOSE_HTML_TEMPLATE = `<p class=\"message message-lose hidden\" id=\"message-lose\">You lose! Restart the game?</p>\n  <p class=\"message message-win hidden\" id=\"message-win\">Winner! Congrats! You did it!</p>\n  <p class=\"message message-start hidden\" id=\"message-start\">\n    Press \"Start\" to begin game. Good luck!\n  </p>`;\n","import {\n  DEFAULT_NUM_2,\n  DEFAULT_NUM_4,\n  FIELD_ROW_MAX_IDX,\n  FIELD_ROW_MIN_IDX,\n  NUMBER_PROBABILITY_ARRAY_LENGTH,\n  FIELD_ROW_LENGTH,\n  VALUE_2048,\n} from \"./constants\";\n\nexport const generateCellValue = () => {\n  const numbers = Array.from(\n    { length: NUMBER_PROBABILITY_ARRAY_LENGTH },\n    (_, idx) => {\n      if (idx === NUMBER_PROBABILITY_ARRAY_LENGTH - 1) {\n        return DEFAULT_NUM_4;\n      }\n\n      return DEFAULT_NUM_2;\n    },\n  );\n\n  return numbers[Math.floor(Math.random() * NUMBER_PROBABILITY_ARRAY_LENGTH)];\n};\n\nexport const generateRandomNumber = () =>\n  Math.floor(\n    Math.random() * (FIELD_ROW_MAX_IDX - FIELD_ROW_MIN_IDX + 1) +\n      FIELD_ROW_MIN_IDX,\n  );\n\nexport const generateRandomPosition = ({ field, exclude = [] }) => {\n  const [excludeX, excludeY] = exclude;\n\n  const positionX = generateRandomNumber();\n  const positionY = generateRandomNumber();\n\n  const isExcluded = positionX === excludeX && positionY === excludeY;\n  const isOccupied = !!field[positionY][positionX];\n\n  if (isExcluded || isOccupied) {\n    return generateRandomPosition({ field, exclude });\n  }\n\n  return [positionX, positionY];\n};\n\nexport const mergeCells = (row) => {\n  const rowCopy = [...row];\n  let counter = 0;\n  let is2048 = false;\n\n  for (let idx = 0; idx < rowCopy.length; idx++) {\n    if (rowCopy[idx] === rowCopy[idx + 1]) {\n      const mergedSum = rowCopy[idx] * 2;\n\n      is2048 = mergedSum === VALUE_2048;\n\n      counter += mergedSum;\n      rowCopy[idx] = mergedSum;\n      rowCopy[idx + 1] = 0;\n    }\n  }\n\n  return { row: rowCopy, counter, is2048 };\n};\n\nexport const filterZeros = (row) => {\n  return row.filter((num) => !!num);\n};\n\nexport const addLackingZeros = (row) => {\n  const diff = 4 - row.length;\n  const zerosArray = Array.from({ length: diff }, () => 0);\n\n  return row.concat(zerosArray);\n};\n\nexport const rotateFieldForward = (inputBoard) => {\n  const outputBoard = Array.from({ length: FIELD_ROW_LENGTH }, () => []);\n\n  for (let i = 0; i < FIELD_ROW_LENGTH; i++) {\n    inputBoard.forEach((_el, idx) => {\n      outputBoard[FIELD_ROW_LENGTH - 1 - idx][i] = inputBoard[i][idx];\n    });\n  }\n\n  return outputBoard;\n};\n\nexport const rotateFieldBackward = (inputBoard) => {\n  const outputBoard = Array.from({ length: FIELD_ROW_LENGTH }, () => []);\n\n  for (let i = 0; i < FIELD_ROW_LENGTH; i++) {\n    inputBoard.forEach((_el, idx) => {\n      outputBoard[idx][FIELD_ROW_LENGTH - 1 - i] = inputBoard[i][idx];\n    });\n  }\n\n  return outputBoard;\n};\n\nexport const horizontalShift = ({ field, rtl = false } = {}) => {\n  let sum = 0;\n  let isWinner = false;\n  let wasChanged = false;\n\n  for (let i = 0; i < field.length; i++) {\n    const row = rtl ? field[i].reverse() : field[i];\n\n    const firstStageFilteredRow = filterZeros(row);\n\n    const {\n      row: mergedCellsRow,\n      counter,\n      is2048,\n    } = mergeCells(firstStageFilteredRow);\n\n    sum += counter;\n    isWinner = is2048;\n\n    const secondStageFilteredRow = filterZeros(mergedCellsRow);\n    const modifiedRow = addLackingZeros(secondStageFilteredRow);\n\n    wasChanged = !wasChanged\n      ? row.some((el, idx) => el !== modifiedRow[idx])\n      : wasChanged;\n\n    field[i] = rtl ? modifiedRow.reverse() : modifiedRow;\n  }\n\n  return {\n    field,\n    score: sum,\n    isWinner,\n    wasChanged,\n  };\n};\n\nexport const verticalShift = ({ field, rtl = false }) => {\n  let rotatedBoard = rotateFieldForward(field);\n\n  const { score, isWinner, wasChanged } = horizontalShift({\n    field: rotatedBoard,\n    rtl,\n  });\n\n  rotatedBoard = rotateFieldBackward(rotatedBoard);\n\n  return {\n    field: rotatedBoard,\n    score,\n    isWinner,\n    wasChanged,\n  };\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","$8c87eaf8dcddc30b$exports","$842258910d9eacc1$export$cc4d8bc46c7cdb33","start","lose","win","$842258910d9eacc1$export$fcce29f5410baf23","w","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","$2d03ec4a5027889a$export$ee3cdcf4b56ea1de","$2d03ec4a5027889a$export$506e34780925d5ee","$2d03ec4a5027889a$export$bcf33fd464112e94","$38ee0b4aef4b3521$export$903b9f27f66c899a","numbers","Array","from","length","_","idx","Math","floor","random","$38ee0b4aef4b3521$export$8ad8ee91ff91d9b5","$38ee0b4aef4b3521$export$d15e1374dfc043f9","field","exclude","excludeX","excludeY","positionX","positionY","isOccupied","isExcluded","$38ee0b4aef4b3521$export$124b0cee26577176","row","rowCopy","counter","is2048","mergedSum","$38ee0b4aef4b3521$export$ae78454ba1e10817","filter","num","$38ee0b4aef4b3521$export$bf5b0b93d48be5a2","zerosArray","concat","$38ee0b4aef4b3521$export$f79bc0ce6bdc0970","inputBoard","outputBoard","i","forEach","_el","$38ee0b4aef4b3521$export$fe71d822d0fb0007","$38ee0b4aef4b3521$export$4bf8c9e1438f4043","rtl","sum","isWinner","wasChanged","reverse","mergedCellsRow","modifiedRow","some","el","score","$38ee0b4aef4b3521$export$d1223525e24f3eda","rotatedBoard","fieldControls","status","messages","key","show","classList","remove","add","newField","_getField","firstCellPosX","firstCellPosY","secondCellPosX","secondCellPosY","rootRef","headerNode","document","createElement","fieldNode","notificationNode","innerHTML","append","controls","startBtn","getElementById","restartBtn","msgWin","msgLose","msgStart","cell","y","_setStatus","_showWinMessage","value","_getStatus","_getScore","_setStatusIdle","_setStatusWin","_setStatusLose","_setStatusPlaying","_showStartMessage","_showLoseMessage","_hideMessages","_setupNewGame","_initialize","_rerender","fieldCells","querySelectorAll","scoreField","rowIdx","cellIdx","cellElement","className","textContent","hasEmptyCells","hasAvailablePairs","_createNewCell","cellPosX","cellPosY","_shiftLeft","_shiftRight","_shiftTop","_shiftBottom","$a5fd07fa01589658$var$Game","addEventListener","bind","restart","moveUp","moveLeft","moveDown","moveRight","initialize","getScore","getState","_getState","getStatus","removeEventListener","gameStatus","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$gameRef"],"version":3,"file":"index.2ac371b9.js.map"}